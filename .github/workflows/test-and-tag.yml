on:
  push:
    branches:
    - '*'
  pull_request:

name: test-and-tag

jobs:
  security-audit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.3.4
    - uses: actions/cache@v2.1.5
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          ~/.cargo/bin
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - uses: actions-rs/audit-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
  version:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2.3.4
      with:
        fetch-depth: 0
    - uses: chaaz/versio-actions/install@v1.1
      name: Install versio
    - name: Check projects
      run: versio check
    - name: Print changes
      run: versio plan
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_USER: ${{ github.actor }}
  check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2.1.5
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          ~/.cargo/bin
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        default: true
    - uses: actions-rs/cargo@v1
      with:
        command: check
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - os: macos-latest
        - os: ubuntu-latest
        - os: windows-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2.1.5
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          ~/.cargo/bin
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.*') }}
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        default: true
    - uses: actions-rs/cargo@v1
      with:
        command: test
  lints:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2.1.5
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          ~/.cargo/bin
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        default: true
        components: rustfmt, clippy
    - uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check
    - uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: --all-targets --all-features -- -D warnings -Dclippy::style -D clippy::pedantic
          -D clippy::cargo
  merge-and-push:
    if: github.ref == 'refs/heads/main'
    needs:
    - version
    - test
    - lints
    - check
    - security-audit
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.3.4
      with:
        token: ${{ secrets.COMMITTER_TOKEN }}
        fetch-depth: 0
    - name: Import GPG key
      uses: crazy-max/ghaction-import-gpg@v3
      with:
        gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.GPG_PASSPHRASE }}
        git-user-signingkey: true
        git-commit-gpgsign: true
        git-tag-gpgsign: true
    - uses: chaaz/versio-actions/install@v1.1
      name: Install versio
    - name: Generate release
      run: versio release
      env:
        GITHUB_TOKEN: ${{ secrets.COMMITTER_TOKEN }}
        GITHUB_USER: ${{ github.actor }}
